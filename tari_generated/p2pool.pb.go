// Copyright 2024. The Tari Project
//
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
// following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following
// disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
// following disclaimer in the documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
// products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: p2pool.proto

package tari_generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTipInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTipInfoRequest) Reset() {
	*x = GetTipInfoRequest{}
	mi := &file_p2pool_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTipInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipInfoRequest) ProtoMessage() {}

func (x *GetTipInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2pool_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTipInfoRequest) Descriptor() ([]byte, []int) {
	return file_p2pool_proto_rawDescGZIP(), []int{0}
}

type GetTipInfoResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NodeHeight       uint64                 `protobuf:"varint,1,opt,name=node_height,json=nodeHeight,proto3" json:"node_height,omitempty"`
	NodeTipHash      []byte                 `protobuf:"bytes,2,opt,name=node_tip_hash,json=nodeTipHash,proto3" json:"node_tip_hash,omitempty"`
	P2PoolRxHeight   uint64                 `protobuf:"varint,3,opt,name=p2pool_rx_height,json=p2poolRxHeight,proto3" json:"p2pool_rx_height,omitempty"`
	P2PoolRxTipHash  []byte                 `protobuf:"bytes,4,opt,name=p2pool_rx_tip_hash,json=p2poolRxTipHash,proto3" json:"p2pool_rx_tip_hash,omitempty"`
	P2PoolShaHeight  uint64                 `protobuf:"varint,5,opt,name=p2pool_sha_height,json=p2poolShaHeight,proto3" json:"p2pool_sha_height,omitempty"`
	P2PoolShaTipHash []byte                 `protobuf:"bytes,6,opt,name=p2pool_sha_tip_hash,json=p2poolShaTipHash,proto3" json:"p2pool_sha_tip_hash,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetTipInfoResponse) Reset() {
	*x = GetTipInfoResponse{}
	mi := &file_p2pool_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTipInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipInfoResponse) ProtoMessage() {}

func (x *GetTipInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2pool_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTipInfoResponse) Descriptor() ([]byte, []int) {
	return file_p2pool_proto_rawDescGZIP(), []int{1}
}

func (x *GetTipInfoResponse) GetNodeHeight() uint64 {
	if x != nil {
		return x.NodeHeight
	}
	return 0
}

func (x *GetTipInfoResponse) GetNodeTipHash() []byte {
	if x != nil {
		return x.NodeTipHash
	}
	return nil
}

func (x *GetTipInfoResponse) GetP2PoolRxHeight() uint64 {
	if x != nil {
		return x.P2PoolRxHeight
	}
	return 0
}

func (x *GetTipInfoResponse) GetP2PoolRxTipHash() []byte {
	if x != nil {
		return x.P2PoolRxTipHash
	}
	return nil
}

func (x *GetTipInfoResponse) GetP2PoolShaHeight() uint64 {
	if x != nil {
		return x.P2PoolShaHeight
	}
	return 0
}

func (x *GetTipInfoResponse) GetP2PoolShaTipHash() []byte {
	if x != nil {
		return x.P2PoolShaTipHash
	}
	return nil
}

type GetNewBlockRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Pow                  *PowAlgo               `protobuf:"bytes,1,opt,name=pow,proto3" json:"pow,omitempty"`
	CoinbaseExtra        string                 `protobuf:"bytes,2,opt,name=coinbase_extra,json=coinbaseExtra,proto3" json:"coinbase_extra,omitempty"`
	WalletPaymentAddress string                 `protobuf:"bytes,3,opt,name=wallet_payment_address,json=walletPaymentAddress,proto3" json:"wallet_payment_address,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetNewBlockRequest) Reset() {
	*x = GetNewBlockRequest{}
	mi := &file_p2pool_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewBlockRequest) ProtoMessage() {}

func (x *GetNewBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2pool_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewBlockRequest.ProtoReflect.Descriptor instead.
func (*GetNewBlockRequest) Descriptor() ([]byte, []int) {
	return file_p2pool_proto_rawDescGZIP(), []int{2}
}

func (x *GetNewBlockRequest) GetPow() *PowAlgo {
	if x != nil {
		return x.Pow
	}
	return nil
}

func (x *GetNewBlockRequest) GetCoinbaseExtra() string {
	if x != nil {
		return x.CoinbaseExtra
	}
	return ""
}

func (x *GetNewBlockRequest) GetWalletPaymentAddress() string {
	if x != nil {
		return x.WalletPaymentAddress
	}
	return ""
}

type GetNewBlockResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Block            *GetNewBlockResult     `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	TargetDifficulty uint64                 `protobuf:"varint,2,opt,name=target_difficulty,json=targetDifficulty,proto3" json:"target_difficulty,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetNewBlockResponse) Reset() {
	*x = GetNewBlockResponse{}
	mi := &file_p2pool_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewBlockResponse) ProtoMessage() {}

func (x *GetNewBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_p2pool_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewBlockResponse.ProtoReflect.Descriptor instead.
func (*GetNewBlockResponse) Descriptor() ([]byte, []int) {
	return file_p2pool_proto_rawDescGZIP(), []int{3}
}

func (x *GetNewBlockResponse) GetBlock() *GetNewBlockResult {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GetNewBlockResponse) GetTargetDifficulty() uint64 {
	if x != nil {
		return x.TargetDifficulty
	}
	return 0
}

type SubmitBlockRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Block                *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	WalletPaymentAddress string                 `protobuf:"bytes,2,opt,name=wallet_payment_address,json=walletPaymentAddress,proto3" json:"wallet_payment_address,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SubmitBlockRequest) Reset() {
	*x = SubmitBlockRequest{}
	mi := &file_p2pool_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBlockRequest) ProtoMessage() {}

func (x *SubmitBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_p2pool_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBlockRequest.ProtoReflect.Descriptor instead.
func (*SubmitBlockRequest) Descriptor() ([]byte, []int) {
	return file_p2pool_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitBlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *SubmitBlockRequest) GetWalletPaymentAddress() string {
	if x != nil {
		return x.WalletPaymentAddress
	}
	return ""
}

var File_p2pool_proto protoreflect.FileDescriptor

var file_p2pool_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x02, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x69, 0x70, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x32, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x72, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x78, 0x5f, 0x74,
	0x69, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70,
	0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x78, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x32, 0x70, 0x6f, 0x6f,
	0x6c, 0x53, 0x68, 0x61, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x32,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x53,
	0x68, 0x61, 0x54, 0x69, 0x70, 0x48, 0x61, 0x73, 0x68, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x03, 0x70, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x77, 0x41, 0x6c, 0x67, 0x6f,
	0x52, 0x03, 0x70, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x34, 0x0a, 0x16,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x22, 0x71, 0x0a, 0x12, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x16, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xec, 0x01, 0x0a,
	0x09, 0x53, 0x68, 0x61, 0x50, 0x32, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c,
	0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74,
	0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x6e, 0x69, 0x70, 0x61, 0x32,
	0x32, 0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x61, 0x72, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x6c,
	0x69, 0x62, 0x2f, 0x74, 0x61, 0x72, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_p2pool_proto_rawDescOnce sync.Once
	file_p2pool_proto_rawDescData []byte
)

func file_p2pool_proto_rawDescGZIP() []byte {
	file_p2pool_proto_rawDescOnce.Do(func() {
		file_p2pool_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2pool_proto_rawDesc), len(file_p2pool_proto_rawDesc)))
	})
	return file_p2pool_proto_rawDescData
}

var file_p2pool_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_p2pool_proto_goTypes = []any{
	(*GetTipInfoRequest)(nil),   // 0: tari.rpc.GetTipInfoRequest
	(*GetTipInfoResponse)(nil),  // 1: tari.rpc.GetTipInfoResponse
	(*GetNewBlockRequest)(nil),  // 2: tari.rpc.GetNewBlockRequest
	(*GetNewBlockResponse)(nil), // 3: tari.rpc.GetNewBlockResponse
	(*SubmitBlockRequest)(nil),  // 4: tari.rpc.SubmitBlockRequest
	(*PowAlgo)(nil),             // 5: tari.rpc.PowAlgo
	(*GetNewBlockResult)(nil),   // 6: tari.rpc.GetNewBlockResult
	(*Block)(nil),               // 7: tari.rpc.Block
	(*SubmitBlockResponse)(nil), // 8: tari.rpc.SubmitBlockResponse
}
var file_p2pool_proto_depIdxs = []int32{
	5, // 0: tari.rpc.GetNewBlockRequest.pow:type_name -> tari.rpc.PowAlgo
	6, // 1: tari.rpc.GetNewBlockResponse.block:type_name -> tari.rpc.GetNewBlockResult
	7, // 2: tari.rpc.SubmitBlockRequest.block:type_name -> tari.rpc.Block
	0, // 3: tari.rpc.ShaP2Pool.GetTipInfo:input_type -> tari.rpc.GetTipInfoRequest
	2, // 4: tari.rpc.ShaP2Pool.GetNewBlock:input_type -> tari.rpc.GetNewBlockRequest
	4, // 5: tari.rpc.ShaP2Pool.SubmitBlock:input_type -> tari.rpc.SubmitBlockRequest
	1, // 6: tari.rpc.ShaP2Pool.GetTipInfo:output_type -> tari.rpc.GetTipInfoResponse
	3, // 7: tari.rpc.ShaP2Pool.GetNewBlock:output_type -> tari.rpc.GetNewBlockResponse
	8, // 8: tari.rpc.ShaP2Pool.SubmitBlock:output_type -> tari.rpc.SubmitBlockResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_p2pool_proto_init() }
func file_p2pool_proto_init() {
	if File_p2pool_proto != nil {
		return
	}
	file_base_node_proto_init()
	file_block_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2pool_proto_rawDesc), len(file_p2pool_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_p2pool_proto_goTypes,
		DependencyIndexes: file_p2pool_proto_depIdxs,
		MessageInfos:      file_p2pool_proto_msgTypes,
	}.Build()
	File_p2pool_proto = out.File
	file_p2pool_proto_goTypes = nil
	file_p2pool_proto_depIdxs = nil
}
