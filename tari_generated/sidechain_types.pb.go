// Copyright 2020. The Tari Project
//
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
// following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following
// disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
// following disclaimer in the documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
// products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: sidechain_types.proto

package tari_generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SideChainFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SideChainFeature:
	//
	//	*SideChainFeature_ValidatorNodeRegistration
	//	*SideChainFeature_TemplateRegistration
	//	*SideChainFeature_ConfidentialOutput
	SideChainFeature isSideChainFeature_SideChainFeature `protobuf_oneof:"side_chain_feature"`
}

func (x *SideChainFeature) Reset() {
	*x = SideChainFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideChainFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideChainFeature) ProtoMessage() {}

func (x *SideChainFeature) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideChainFeature.ProtoReflect.Descriptor instead.
func (*SideChainFeature) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{0}
}

func (m *SideChainFeature) GetSideChainFeature() isSideChainFeature_SideChainFeature {
	if m != nil {
		return m.SideChainFeature
	}
	return nil
}

func (x *SideChainFeature) GetValidatorNodeRegistration() *ValidatorNodeRegistration {
	if x, ok := x.GetSideChainFeature().(*SideChainFeature_ValidatorNodeRegistration); ok {
		return x.ValidatorNodeRegistration
	}
	return nil
}

func (x *SideChainFeature) GetTemplateRegistration() *TemplateRegistration {
	if x, ok := x.GetSideChainFeature().(*SideChainFeature_TemplateRegistration); ok {
		return x.TemplateRegistration
	}
	return nil
}

func (x *SideChainFeature) GetConfidentialOutput() *ConfidentialOutputData {
	if x, ok := x.GetSideChainFeature().(*SideChainFeature_ConfidentialOutput); ok {
		return x.ConfidentialOutput
	}
	return nil
}

type isSideChainFeature_SideChainFeature interface {
	isSideChainFeature_SideChainFeature()
}

type SideChainFeature_ValidatorNodeRegistration struct {
	ValidatorNodeRegistration *ValidatorNodeRegistration `protobuf:"bytes,1,opt,name=validator_node_registration,json=validatorNodeRegistration,proto3,oneof"`
}

type SideChainFeature_TemplateRegistration struct {
	TemplateRegistration *TemplateRegistration `protobuf:"bytes,2,opt,name=template_registration,json=templateRegistration,proto3,oneof"`
}

type SideChainFeature_ConfidentialOutput struct {
	ConfidentialOutput *ConfidentialOutputData `protobuf:"bytes,3,opt,name=confidential_output,json=confidentialOutput,proto3,oneof"`
}

func (*SideChainFeature_ValidatorNodeRegistration) isSideChainFeature_SideChainFeature() {}

func (*SideChainFeature_TemplateRegistration) isSideChainFeature_SideChainFeature() {}

func (*SideChainFeature_ConfidentialOutput) isSideChainFeature_SideChainFeature() {}

type ValidatorNodeRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte     `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature *Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ValidatorNodeRegistration) Reset() {
	*x = ValidatorNodeRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorNodeRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorNodeRegistration) ProtoMessage() {}

func (x *ValidatorNodeRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorNodeRegistration.ProtoReflect.Descriptor instead.
func (*ValidatorNodeRegistration) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{1}
}

func (x *ValidatorNodeRegistration) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ValidatorNodeRegistration) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type TemplateRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorPublicKey []byte        `protobuf:"bytes,1,opt,name=author_public_key,json=authorPublicKey,proto3" json:"author_public_key,omitempty"`
	AuthorSignature *Signature    `protobuf:"bytes,2,opt,name=author_signature,json=authorSignature,proto3" json:"author_signature,omitempty"`
	TemplateName    string        `protobuf:"bytes,3,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	TemplateVersion uint32        `protobuf:"varint,4,opt,name=template_version,json=templateVersion,proto3" json:"template_version,omitempty"`
	TemplateType    *TemplateType `protobuf:"bytes,5,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	BuildInfo       *BuildInfo    `protobuf:"bytes,6,opt,name=build_info,json=buildInfo,proto3" json:"build_info,omitempty"`
	BinarySha       []byte        `protobuf:"bytes,7,opt,name=binary_sha,json=binarySha,proto3" json:"binary_sha,omitempty"`
	BinaryUrl       string        `protobuf:"bytes,8,opt,name=binary_url,json=binaryUrl,proto3" json:"binary_url,omitempty"`
}

func (x *TemplateRegistration) Reset() {
	*x = TemplateRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRegistration) ProtoMessage() {}

func (x *TemplateRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRegistration.ProtoReflect.Descriptor instead.
func (*TemplateRegistration) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{2}
}

func (x *TemplateRegistration) GetAuthorPublicKey() []byte {
	if x != nil {
		return x.AuthorPublicKey
	}
	return nil
}

func (x *TemplateRegistration) GetAuthorSignature() *Signature {
	if x != nil {
		return x.AuthorSignature
	}
	return nil
}

func (x *TemplateRegistration) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *TemplateRegistration) GetTemplateVersion() uint32 {
	if x != nil {
		return x.TemplateVersion
	}
	return 0
}

func (x *TemplateRegistration) GetTemplateType() *TemplateType {
	if x != nil {
		return x.TemplateType
	}
	return nil
}

func (x *TemplateRegistration) GetBuildInfo() *BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *TemplateRegistration) GetBinarySha() []byte {
	if x != nil {
		return x.BinarySha
	}
	return nil
}

func (x *TemplateRegistration) GetBinaryUrl() string {
	if x != nil {
		return x.BinaryUrl
	}
	return ""
}

type ConfidentialOutputData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClaimPublicKey []byte `protobuf:"bytes,1,opt,name=claim_public_key,json=claimPublicKey,proto3" json:"claim_public_key,omitempty"`
}

func (x *ConfidentialOutputData) Reset() {
	*x = ConfidentialOutputData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfidentialOutputData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfidentialOutputData) ProtoMessage() {}

func (x *ConfidentialOutputData) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfidentialOutputData.ProtoReflect.Descriptor instead.
func (*ConfidentialOutputData) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{3}
}

func (x *ConfidentialOutputData) GetClaimPublicKey() []byte {
	if x != nil {
		return x.ClaimPublicKey
	}
	return nil
}

type TemplateType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TemplateType:
	//
	//	*TemplateType_Wasm
	//	*TemplateType_Flow
	//	*TemplateType_Manifest
	TemplateType isTemplateType_TemplateType `protobuf_oneof:"template_type"`
}

func (x *TemplateType) Reset() {
	*x = TemplateType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateType) ProtoMessage() {}

func (x *TemplateType) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateType.ProtoReflect.Descriptor instead.
func (*TemplateType) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{4}
}

func (m *TemplateType) GetTemplateType() isTemplateType_TemplateType {
	if m != nil {
		return m.TemplateType
	}
	return nil
}

func (x *TemplateType) GetWasm() *WasmInfo {
	if x, ok := x.GetTemplateType().(*TemplateType_Wasm); ok {
		return x.Wasm
	}
	return nil
}

func (x *TemplateType) GetFlow() *FlowInfo {
	if x, ok := x.GetTemplateType().(*TemplateType_Flow); ok {
		return x.Flow
	}
	return nil
}

func (x *TemplateType) GetManifest() *ManifestInfo {
	if x, ok := x.GetTemplateType().(*TemplateType_Manifest); ok {
		return x.Manifest
	}
	return nil
}

type isTemplateType_TemplateType interface {
	isTemplateType_TemplateType()
}

type TemplateType_Wasm struct {
	Wasm *WasmInfo `protobuf:"bytes,1,opt,name=wasm,proto3,oneof"`
}

type TemplateType_Flow struct {
	Flow *FlowInfo `protobuf:"bytes,2,opt,name=flow,proto3,oneof"`
}

type TemplateType_Manifest struct {
	Manifest *ManifestInfo `protobuf:"bytes,3,opt,name=manifest,proto3,oneof"`
}

func (*TemplateType_Wasm) isTemplateType_TemplateType() {}

func (*TemplateType_Flow) isTemplateType_TemplateType() {}

func (*TemplateType_Manifest) isTemplateType_TemplateType() {}

type WasmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbiVersion uint32 `protobuf:"varint,1,opt,name=abi_version,json=abiVersion,proto3" json:"abi_version,omitempty"`
}

func (x *WasmInfo) Reset() {
	*x = WasmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WasmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmInfo) ProtoMessage() {}

func (x *WasmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmInfo.ProtoReflect.Descriptor instead.
func (*WasmInfo) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{5}
}

func (x *WasmInfo) GetAbiVersion() uint32 {
	if x != nil {
		return x.AbiVersion
	}
	return 0
}

type FlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FlowInfo) Reset() {
	*x = FlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfo) ProtoMessage() {}

func (x *FlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfo.ProtoReflect.Descriptor instead.
func (*FlowInfo) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{6}
}

type ManifestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ManifestInfo) Reset() {
	*x = ManifestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestInfo) ProtoMessage() {}

func (x *ManifestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestInfo.ProtoReflect.Descriptor instead.
func (*ManifestInfo) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{7}
}

type BuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUrl    string `protobuf:"bytes,1,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	CommitHash []byte `protobuf:"bytes,2,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sidechain_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sidechain_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_sidechain_types_proto_rawDescGZIP(), []int{8}
}

func (x *BuildInfo) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *BuildInfo) GetCommitHash() []byte {
	if x != nil {
		return x.CommitHash
	}
	return nil
}

var File_sidechain_types_proto protoreflect.FileDescriptor

var file_sidechain_types_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70,
	0x63, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb,
	0x02, 0x0a, 0x10, 0x53, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x65, 0x0a, 0x1b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x15, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x61, 0x72, 0x69,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x14, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x53, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6d, 0x0a, 0x19,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61,
	0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x81, 0x03, 0x0a, 0x14,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x3e, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x72,
	0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x0f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x68, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x22,
	0x42, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x77, 0x61, 0x73, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x61,
	0x73, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x77, 0x61, 0x73, 0x6d, 0x12, 0x28,
	0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x61, 0x72, 0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x72,
	0x69, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x42, 0x0f,
	0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x2b, 0x0a, 0x08, 0x57, 0x61, 0x73, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x62, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x62, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x0a, 0x0a, 0x08,
	0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x09, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x53, 0x6e, 0x69, 0x70, 0x61, 0x32, 0x32, 0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x61, 0x72, 0x69, 0x2d,
	0x70, 0x32, 0x70, 0x6f, 0x6f, 0x6c, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2f, 0x74, 0x61, 0x72, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sidechain_types_proto_rawDescOnce sync.Once
	file_sidechain_types_proto_rawDescData = file_sidechain_types_proto_rawDesc
)

func file_sidechain_types_proto_rawDescGZIP() []byte {
	file_sidechain_types_proto_rawDescOnce.Do(func() {
		file_sidechain_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_sidechain_types_proto_rawDescData)
	})
	return file_sidechain_types_proto_rawDescData
}

var file_sidechain_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sidechain_types_proto_goTypes = []interface{}{
	(*SideChainFeature)(nil),          // 0: tari.rpc.SideChainFeature
	(*ValidatorNodeRegistration)(nil), // 1: tari.rpc.ValidatorNodeRegistration
	(*TemplateRegistration)(nil),      // 2: tari.rpc.TemplateRegistration
	(*ConfidentialOutputData)(nil),    // 3: tari.rpc.ConfidentialOutputData
	(*TemplateType)(nil),              // 4: tari.rpc.TemplateType
	(*WasmInfo)(nil),                  // 5: tari.rpc.WasmInfo
	(*FlowInfo)(nil),                  // 6: tari.rpc.FlowInfo
	(*ManifestInfo)(nil),              // 7: tari.rpc.ManifestInfo
	(*BuildInfo)(nil),                 // 8: tari.rpc.BuildInfo
	(*Signature)(nil),                 // 9: tari.rpc.Signature
}
var file_sidechain_types_proto_depIdxs = []int32{
	1,  // 0: tari.rpc.SideChainFeature.validator_node_registration:type_name -> tari.rpc.ValidatorNodeRegistration
	2,  // 1: tari.rpc.SideChainFeature.template_registration:type_name -> tari.rpc.TemplateRegistration
	3,  // 2: tari.rpc.SideChainFeature.confidential_output:type_name -> tari.rpc.ConfidentialOutputData
	9,  // 3: tari.rpc.ValidatorNodeRegistration.signature:type_name -> tari.rpc.Signature
	9,  // 4: tari.rpc.TemplateRegistration.author_signature:type_name -> tari.rpc.Signature
	4,  // 5: tari.rpc.TemplateRegistration.template_type:type_name -> tari.rpc.TemplateType
	8,  // 6: tari.rpc.TemplateRegistration.build_info:type_name -> tari.rpc.BuildInfo
	5,  // 7: tari.rpc.TemplateType.wasm:type_name -> tari.rpc.WasmInfo
	6,  // 8: tari.rpc.TemplateType.flow:type_name -> tari.rpc.FlowInfo
	7,  // 9: tari.rpc.TemplateType.manifest:type_name -> tari.rpc.ManifestInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_sidechain_types_proto_init() }
func file_sidechain_types_proto_init() {
	if File_sidechain_types_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sidechain_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideChainFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorNodeRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfidentialOutputData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WasmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sidechain_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sidechain_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SideChainFeature_ValidatorNodeRegistration)(nil),
		(*SideChainFeature_TemplateRegistration)(nil),
		(*SideChainFeature_ConfidentialOutput)(nil),
	}
	file_sidechain_types_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TemplateType_Wasm)(nil),
		(*TemplateType_Flow)(nil),
		(*TemplateType_Manifest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sidechain_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sidechain_types_proto_goTypes,
		DependencyIndexes: file_sidechain_types_proto_depIdxs,
		MessageInfos:      file_sidechain_types_proto_msgTypes,
	}.Build()
	File_sidechain_types_proto = out.File
	file_sidechain_types_proto_rawDesc = nil
	file_sidechain_types_proto_goTypes = nil
	file_sidechain_types_proto_depIdxs = nil
}
